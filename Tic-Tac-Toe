import math

# Initialize the board
board = [' ' for _ in range(9)]

def print_board():
    print()
    for i in range(3):
        row = board[3*i:3*(i+1)]
        print(' | '.join(row))
        if i < 2:
            print('-' * 5)
    print()

def is_winner(brd, player):
    win_conditions = [
        [0,1,2], [3,4,5], [6,7,8],  # rows
        [0,3,6], [1,4,7], [2,5,8],  # cols
        [0,4,8], [2,4,6]            # diagonals
    ]
    for condition in win_conditions:
        if all(brd[i] == player for i in condition):
            return True
    return False

def is_board_full(brd):
    return all(space != ' ' for space in brd)

def minimax(brd, depth, is_maximizing, alpha, beta):
    if is_winner(brd, 'X'):
        return 10 - depth
    elif is_winner(brd, 'O'):
        return depth - 10
    elif is_board_full(brd):
        return 0

    if is_maximizing:
        max_eval = -math.inf
        for i in range(9):
            if brd[i] == ' ':
                brd[i] = 'X'
                eval = minimax(brd, depth+1, False, alpha, beta)
                brd[i] = ' '
                max_eval = max(max_eval, eval)
                alpha = max(alpha, eval)
                if beta <= alpha:
                    break
        return max_eval
    else:
        min_eval = math.inf
        for i in range(9):
            if brd[i] == ' ':
                brd[i] = 'O'
                eval = minimax(brd, depth+1, True, alpha, beta)
                brd[i] = ' '
                min_eval = min(min_eval, eval)
                beta = min(beta, eval)
                if beta <= alpha:
                    break
        return min_eval

def ai_move():
    best_score = -math.inf
    move = -1
    for i in range(9):
        if board[i] == ' ':
            board[i] = 'X'
            score = minimax(board, 0, False, -math.inf, math.inf)
            board[i] = ' '
            if score > best_score:
                best_score = score
                move = i
    board[move] = 'X'

def player_move():
    while True:
        try:
            pos = int(input("Enter your move (1-9): ")) - 1
            if pos < 0 or pos > 8:
                print("Invalid input. Choose a number from 1 to 9.")
            elif board[pos] != ' ':
                print("That spot is already taken.")
            else:
                board[pos] = 'O'
                break
        except ValueError:
            print("Invalid input. Please enter a number.")

def main():
    print("Welcome to Tic Tac Toe!")
    print("You are 'O', AI is 'X'.")
    print("Board positions:")
    print("1 | 2 | 3")
    print("---------")
    print("4 | 5 | 6")
    print("---------")
    print("7 | 8 | 9")

    while True:
        print_board()
        player_move()
        if is_winner(board, 'O'):
            print_board()
            print("You win! Congratulations!")
            break
        if is_board_full(board):
            print_board()
            print("It's a tie!")
            break

        ai_move()
        if is_winner(board, 'X'):
            print_board()
            print("AI wins! Better luck next time.")
            break
        if is_board_full(board):
            print_board()
            print("It's a tie!")
            break

if __name__ == "__main__":
    main()
